{"version":3,"sources":["webpack:///react-widgets-date-fns.js","webpack:///webpack/bootstrap 0a35ebe7eb2303a9c2b4","webpack:////Users/jason/src/react-widgets/tools/shim.js","webpack:///./localizer.js","webpack:///external \"window.ReactWidgets\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","getYear","date","culture","localizer","format","decade","endOfDecade","century","endOfCentury","dateFnsLocalizer","getLocale","locales","_enUS2","pattern","_formatWithOptions2","locale","parse","_parseWithOptions2","Date","firstOfWeek","_getLocale","options","weekStartsOn","_ref","arguments","length","undefined","_ref$formats","formats","defaultFormats","_ref$locales","_configure2","setDateLocalizer","_formatWithOptions","e","Error","code","_parseWithOptions","_addYears","_addYears2","_enUS","_configure","time","header","footer","weekday","dayOfMonth","month","year","window","ReactWidgets"],"mappings":"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","file":"react-widgets-date-fns.js","sourcesContent":["/*! (c) 2014 - present: Jason Quense | https://github.com/jquense/react-widgets/blob/master/LICENSE.md */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*** IMPORTS FROM imports-loader ***/\nvar module = __webpack_require__(1);\n\n'use strict';\n\nif (typeof module === 'function') {\n  module();\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.defaultFormats = undefined;\nexports.default = dateFnsLocalizer;\n\nvar _formatWithOptions = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"date-fns/fp/formatWithOptions\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\nvar _formatWithOptions2 = _interopRequireDefault(_formatWithOptions);\n\nvar _parseWithOptions = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"date-fns/fp/parseWithOptions\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\nvar _parseWithOptions2 = _interopRequireDefault(_parseWithOptions);\n\nvar _addYears = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"date-fns/fp/addYears\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\nvar _addYears2 = _interopRequireDefault(_addYears);\n\nvar _enUS = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"date-fns/locale/en-US\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\nvar _enUS2 = _interopRequireDefault(_enUS);\n\nvar _configure = __webpack_require__(2);\n\nvar _configure2 = _interopRequireDefault(_configure);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar endOfDecade = (0, _addYears2.default)(10);\n\nvar endOfCentury = (0, _addYears2.default)(100);\n\nfunction getYear(date, culture, localizer) {\n  return localizer.format(date, 'YYYY', culture);\n}\n\nfunction decade(date, culture, localizer) {\n  return getYear(date, culture, localizer) + ' - ' + getYear(endOfDecade(date), culture, localizer);\n}\n\nfunction century(date, culture, localizer) {\n  return getYear(date, culture, localizer) + ' - ' + getYear(endOfCentury(date), culture, localizer);\n}\n\nvar defaultFormats = exports.defaultFormats = {\n  date: 'L',\n  time: 'LT',\n  default: 'lll',\n  header: 'MMMM YYYY',\n  footer: 'LL',\n  weekday: 'dd',\n  dayOfMonth: 'DD',\n  month: 'MMM',\n  year: 'YYYY',\n  decade: decade,\n  century: century\n\n  /**\n   * Configures localization of [react-widgets](http://jquense.github.io/react-widgets/) by calling\n   * `configure.setDateLocalizer`\n   * @static\n   * @param {Object} formats Confguration options.\n   * @param {string|Object|function} formats.default  the default date display format, generally a \"long\" format showing\n   *   both date and time\n   * @param {string|Object|function} formats.date A date only format\n   * @param {string|Object|function} formats.time A time only format\n   * @param {string|Object|function} formats.header The heading of the Calendar month view, contextualizes the current\n   *   month, e.g. \"Jan 2014\"\n   * @param {string|Object|function} formats.footer The Calendar footer format, for displaying Today's date\n   * @param {string|Object|function} formats.dayOfMonth The day of the month\n   * @param {string|Object|function} formats.month  Month name, used in the Year view of the Calendar\n   * @param {string|Object|function} formats.year year format, used in the Decade view of the Calendar\n   * @param {string|Object|function} formats.decade a decade format, used in the Century view of the Calendar,\n   *  eg. \"2010 - 2019\"\n   * @param {string|Object|function} formats.century  A century format, used the in the Calendar heading\n   * @param {Object} locales Supported date-fns locales to include in the bundle\n   * @example\n   * import dateFnsLocalizer, { defaultFormats } from 'react-widgets-dates'\n   * dateFnsLocalizer()\n   * // => Works out of the box with default formats (defaultFormats) and the `en-US` locale\n   * const newFormats = Object.assign(defaultFormats, { default: 'mmm YY' })\n   * dateFnsLocalizer({ formats: newFormats })\n   * // => Uses new configuration\n   *\n   * import locales from 'date-fns/locale'\n   * dateFnsLocalizer({ formats: newFormats, locales })\n   * // => Includes all available locales\n   *\n   * import enGB from 'date-fns/locale/en-GB'\n   * import de from 'date-fns/locale/de'\n   * dateFnsLocalizer({ locales: { 'en-GB': enGB, 'de': de } })\n   * // => Include only the locales you need to limit the bundled size\n   */\n};function dateFnsLocalizer() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$formats = _ref.formats,\n      formats = _ref$formats === undefined ? defaultFormats : _ref$formats,\n      _ref$locales = _ref.locales,\n      locales = _ref$locales === undefined ? {} : _ref$locales;\n\n  function getLocale(culture) {\n    return locales[culture] || _enUS2.default;\n  }\n\n  function format(date, pattern, culture) {\n    return (0, _formatWithOptions2.default)({ locale: getLocale(culture) }, pattern, date);\n  }\n\n  function parse(date, pattern, culture) {\n    return (0, _parseWithOptions2.default)({ locale: getLocale(culture) }, new Date(), pattern, date);\n  }\n\n  function firstOfWeek(culture) {\n    var _getLocale = getLocale(culture),\n        options = _getLocale.options;\n\n    return options && options.weekStartsOn || 0;\n  }\n\n  _configure2.default.setDateLocalizer({ formats: formats, firstOfWeek: firstOfWeek, parse: parse, format: format });\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = window.ReactWidgets;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// react-widgets-date-fns.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0a35ebe7eb2303a9c2b4","if (typeof module === 'function') {\n  module()\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jason/src/react-widgets/tools/shim.js","import formatWithOptions from 'date-fns/fp/formatWithOptions'\nimport parseWithOptions from 'date-fns/fp/parseWithOptions'\nimport addYears from 'date-fns/fp/addYears'\nimport enUS from 'date-fns/locale/en-US'\nimport configure from 'react-widgets/lib/configure'\n\nconst endOfDecade = addYears(10)\n\nconst endOfCentury = addYears(100)\n\nfunction getYear(date, culture, localizer) {\n  return localizer.format(date, 'YYYY', culture)\n}\n\nfunction decade(date, culture, localizer) {\n  return getYear(date, culture, localizer) + ' - ' + getYear(endOfDecade(date), culture, localizer)\n}\n\nfunction century(date, culture, localizer) {\n  return getYear(date, culture, localizer) + ' - ' + getYear(endOfCentury(date), culture, localizer)\n}\n\nexport const defaultFormats = {\n  date: 'L',\n  time: 'LT',\n  default: 'lll',\n  header: 'MMMM YYYY',\n  footer: 'LL',\n  weekday: 'dd',\n  dayOfMonth: 'DD',\n  month: 'MMM',\n  year: 'YYYY',\n  decade: decade,\n  century: century,\n}\n\n/**\n * Configures localization of [react-widgets](http://jquense.github.io/react-widgets/) by calling\n * `configure.setDateLocalizer`\n * @static\n * @param {Object} formats Confguration options.\n * @param {string|Object|function} formats.default  the default date display format, generally a \"long\" format showing\n *   both date and time\n * @param {string|Object|function} formats.date A date only format\n * @param {string|Object|function} formats.time A time only format\n * @param {string|Object|function} formats.header The heading of the Calendar month view, contextualizes the current\n *   month, e.g. \"Jan 2014\"\n * @param {string|Object|function} formats.footer The Calendar footer format, for displaying Today's date\n * @param {string|Object|function} formats.dayOfMonth The day of the month\n * @param {string|Object|function} formats.month  Month name, used in the Year view of the Calendar\n * @param {string|Object|function} formats.year year format, used in the Decade view of the Calendar\n * @param {string|Object|function} formats.decade a decade format, used in the Century view of the Calendar,\n *  eg. \"2010 - 2019\"\n * @param {string|Object|function} formats.century  A century format, used the in the Calendar heading\n * @param {Object} locales Supported date-fns locales to include in the bundle\n * @example\n * import dateFnsLocalizer, { defaultFormats } from 'react-widgets-dates'\n * dateFnsLocalizer()\n * // => Works out of the box with default formats (defaultFormats) and the `en-US` locale\n * const newFormats = Object.assign(defaultFormats, { default: 'mmm YY' })\n * dateFnsLocalizer({ formats: newFormats })\n * // => Uses new configuration\n *\n * import locales from 'date-fns/locale'\n * dateFnsLocalizer({ formats: newFormats, locales })\n * // => Includes all available locales\n *\n * import enGB from 'date-fns/locale/en-GB'\n * import de from 'date-fns/locale/de'\n * dateFnsLocalizer({ locales: { 'en-GB': enGB, 'de': de } })\n * // => Include only the locales you need to limit the bundled size\n */\nexport default function dateFnsLocalizer({ formats = defaultFormats, locales = {} } = {}) {\n  function getLocale(culture) {\n    return locales[culture] || enUS\n  }\n\n  function format(date, pattern, culture) {\n    return formatWithOptions({ locale: getLocale(culture) }, pattern, date)\n  }\n\n  function parse(date, pattern, culture) {\n    return parseWithOptions({ locale: getLocale(culture) }, new Date(), pattern, date)\n  }\n\n  function firstOfWeek(culture) {\n    const {options} = getLocale(culture)\n    return (options && options.weekStartsOn) || 0\n  }\n\n  configure.setDateLocalizer({ formats, firstOfWeek, parse, format })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./localizer.js","module.exports = window.ReactWidgets;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"window.ReactWidgets\"\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}